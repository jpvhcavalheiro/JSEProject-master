package repositories;

import io.altar.jseproject.model.Entity;
import java.util.Map;
import java.util.HashMap;

public abstract class EntityRepository<T extends Entity> {
	
	private Map<Long, T> map = new HashMap<Long, T>();
	private long currentId = 0;

	private long nextId(long currentId){
		currentId++;
		return currentId;
	}
	
	public long createEntity(T entity) {
		entity.setId(currentId);
		map.put(entity.getId(), entity);
		nextId(currentId);
		return entity.getId();
	}
	public T findEntityById(Long id) {
		return map.get(id);
	}
	public void removeEntityById(Long id) {
		map.remove(id);
	}
	public void updateEntityById(T entity) {
		map.replace(entity.getId(), entity);
	}
	public Map <Long, T> getMap() {
		return map;
	}
}
/*import entities.Veículo;
import java.util.Map;
import java.util.HashMap;
import java.util.Collection;

public abstract class VeicRepository <T extends Veículo> {
	private Map<Long,T> map=new HashMap<Long,T>();
	
	private long actualId=0;
	public void save (T veic) {
		veic.setId(actualId);
		map.put(veic.getId(),veic);
		actualId++;
	}
	public T findById(Long id) {
		return map.get(id);
	}
	public void removeById (Long id) {
		map.remove(id);
	}
	public void updateById(T veic) {
		map.replace(veic.getId(), veic);
	}
	public Collection<T> getAll() {
		return map.values();
	}
	public Map <Long, T> getMap() {
		return map;
	}

}*/